{
  "stats": {
    "suites": 8,
    "tests": 45,
    "passes": 18,
    "pending": 0,
    "failures": 27,
    "start": "2019-12-12T19:40:20.621Z",
    "end": "2019-12-12T19:40:20.648Z",
    "duration": 27
  },
  "tests": [
    {
      "title": "keyValue: data/samples/1.json, \"name\", \"Weedle\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/1.json, \"name\", \"Weedle\"",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/1.json, \"id\", \"12\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/1.json, \"id\", \"12\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/2.json, \"doesNotExist\", \"hi!\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/2.json, \"doesNotExist\", \"hi!\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/2.json, \"name\", \"Mew\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/2.json, \"name\", \"Mew\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/3.json, \"egg\", \"Not in Eggs\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/3.json, \"egg\", \"Not in Eggs\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/3.json, \"egg\", \"5 km",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/3.json, \"egg\", \"5 km",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/4.json, \"spawn_time\", \"N/A\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/4.json, \"spawn_time\", \"N/A\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/1.json, 13",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/1.json, 13",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/1.json, 16",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/1.json, 16",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/2.json, 46",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/2.json, 46",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/2.json, 42",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/2.json, 42",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/3.json, 84",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/3.json, 84",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/3.json, 85",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/3.json, 85",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "value: data/samples/5.json, \"null\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/5.json, \"null\"",
      "duration": 6,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Moltres',\n\u001b[31m-\u001b[39m     num: '146'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mewtwo',\n\u001b[31m-\u001b[39m     num: '150'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Moltres',\n\u001b[31m-\u001b[39m     num: '146'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mewtwo',\n\u001b[31m-\u001b[39m     num: '150'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Moltres",
            "num": "146"
          },
          {
            "name": "Dragonite",
            "num": "149"
          },
          {
            "name": "Mewtwo",
            "num": "150"
          },
          {
            "name": "Mew",
            "num": "151"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "value: data/samples/4.json, \"None\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/4.json, \"None\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mr. Mime',\n\u001b[31m-\u001b[39m     num: '122'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Scyther',\n\u001b[31m-\u001b[39m     num: '123'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Jynx',\n\u001b[31m-\u001b[39m     num: '124'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Electabuzz',\n\u001b[31m-\u001b[39m     num: '125'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Magmar',\n\u001b[31m-\u001b[39m     num: '126'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Pinsir',\n\u001b[31m-\u001b[39m     num: '127'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Tauros',\n\u001b[31m-\u001b[39m     num: '128'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Lapras',\n\u001b[31m-\u001b[39m     num: '131'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Ditto',\n\u001b[31m-\u001b[39m     num: '132'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mr. Mime',\n\u001b[31m-\u001b[39m     num: '122'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Scyther',\n\u001b[31m-\u001b[39m     num: '123'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Jynx',\n\u001b[31m-\u001b[39m     num: '124'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Electabuzz',\n\u001b[31m-\u001b[39m     num: '125'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Magmar',\n\u001b[31m-\u001b[39m     num: '126'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Pinsir',\n\u001b[31m-\u001b[39m     num: '127'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Tauros',\n\u001b[31m-\u001b[39m     num: '128'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Lapras',\n\u001b[31m-\u001b[39m     num: '131'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Ditto',\n\u001b[31m-\u001b[39m     num: '132'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Mr. Mime",
            "num": "122"
          },
          {
            "name": "Scyther",
            "num": "123"
          },
          {
            "name": "Jynx",
            "num": "124"
          },
          {
            "name": "Electabuzz",
            "num": "125"
          },
          {
            "name": "Magmar",
            "num": "126"
          },
          {
            "name": "Pinsir",
            "num": "127"
          },
          {
            "name": "Tauros",
            "num": "128"
          },
          {
            "name": "Lapras",
            "num": "131"
          },
          {
            "name": "Ditto",
            "num": "132"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "value: data/samples/2.json, \"Bug\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/2.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "value: data/samples/1.json, \"12\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/1.json, \"12\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Caterpie',\n\u001b[31m-\u001b[39m     num: '010'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Weedle',\n\u001b[31m-\u001b[39m     num: '013'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Caterpie',\n\u001b[31m-\u001b[39m     num: '010'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Weedle',\n\u001b[31m-\u001b[39m     num: '013'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Caterpie",
            "num": "010"
          },
          {
            "name": "Butterfree",
            "num": "012"
          },
          {
            "name": "Weedle",
            "num": "013"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "type: data/samples/5.json, \"Dragon\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/5.json, \"Dragon\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/4.json, \"Normal\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/4.json, \"Normal\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/3.json, \"Water\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/3.json, \"Water\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/2.json, \"Bug\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/2.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/1.json, \"Bug\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/1.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "weakness: data/samples/5.json, \"Dragon\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/5.json, \"Dragon\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dratini',\n\u001b[31m-\u001b[39m     num: '147'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonair',\n\u001b[31m-\u001b[39m     num: '148'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dratini',\n\u001b[31m-\u001b[39m     num: '147'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonair',\n\u001b[31m-\u001b[39m     num: '148'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Dratini",
            "num": "147"
          },
          {
            "name": "Dragonair",
            "num": "148"
          },
          {
            "name": "Dragonite",
            "num": "149"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/4.json, \"Normal\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/4.json, \"Normal\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/3.json, \"Fighting\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/3.json, \"Fighting\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dewgong',\n\u001b[31m-\u001b[39m     num: '087'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dewgong',\n\u001b[31m-\u001b[39m     num: '087'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Dewgong",
            "num": "087"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/2.json, \"Bug\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/2.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Paras',\n\u001b[31m-\u001b[39m     num: '046'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Parasect',\n\u001b[31m-\u001b[39m     num: '047'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Paras',\n\u001b[31m-\u001b[39m     num: '046'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Parasect',\n\u001b[31m-\u001b[39m     num: '047'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Paras",
            "num": "046"
          },
          {
            "name": "Parasect",
            "num": "047"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/1.json, \"Electric\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/1.json, \"Electric\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Squirtle",
            "num": "007"
          },
          {
            "name": "Wartortle",
            "num": "008"
          },
          {
            "name": "Blastoise",
            "num": "009"
          },
          {
            "name": "Butterfree",
            "num": "012"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/2.json, \"id\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/2.json, \"id\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   43,\n\u001b[31m-\u001b[39m   44,\n\u001b[31m-\u001b[39m   45,\n\u001b[31m-\u001b[39m   46,\n\u001b[31m-\u001b[39m   47\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   43,\n\u001b[31m-\u001b[39m   44,\n\u001b[31m-\u001b[39m   45,\n\u001b[31m-\u001b[39m   46,\n\u001b[31m-\u001b[39m   47\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          43,
          44,
          45,
          46,
          47
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/3.json, \"num\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/3.json, \"num\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   '083',\n\u001b[31m-\u001b[39m   '084',\n\u001b[31m-\u001b[39m   '085',\n\u001b[31m-\u001b[39m   '086',\n\u001b[31m-\u001b[39m   '087'\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   '083',\n\u001b[31m-\u001b[39m   '084',\n\u001b[31m-\u001b[39m   '085',\n\u001b[31m-\u001b[39m   '086',\n\u001b[31m-\u001b[39m   '087'\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          "083",
          "084",
          "085",
          "086",
          "087"
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/4.json, \"weaknesses\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/4.json, \"weaknesses\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m \u001b[34m...\u001b[39m Lines skipped\n\n\u001b[32m+\u001b[39m undefined\n\u001b[34m...\u001b[39m\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Ice',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Rock',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark',\n\u001b[31m-\u001b[39m     'Steel'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Ground'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Water',\n\u001b[31m-\u001b[39m     'Ground',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fighting'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass',\n\u001b[31m-\u001b[39m     'Fighting',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[34m...\u001b[39m\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m \u001b[34m...\u001b[39m Lines skipped\n\n\u001b[32m+\u001b[39m undefined\n\u001b[34m...\u001b[39m\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Ice',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Rock',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark',\n\u001b[31m-\u001b[39m     'Steel'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Ground'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Water',\n\u001b[31m-\u001b[39m     'Ground',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fighting'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass',\n\u001b[31m-\u001b[39m     'Fighting',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[34m...\u001b[39m",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          [
            "Bug",
            "Ghost",
            "Dark"
          ],
          [
            "Fire",
            "Electric",
            "Ice",
            "Flying",
            "Rock"
          ],
          [
            "Fire",
            "Bug",
            "Rock",
            "Ghost",
            "Dark",
            "Steel"
          ],
          [
            "Ground"
          ],
          [
            "Water",
            "Ground",
            "Rock"
          ],
          [
            "Fire",
            "Flying",
            "Rock"
          ],
          [
            "Fighting"
          ],
          [
            "Electric",
            "Grass"
          ],
          [
            "Electric",
            "Rock"
          ],
          [
            "Electric",
            "Grass",
            "Fighting",
            "Rock"
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/5.json, \"next_evolution\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/5.json, \"next_evolution\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonair',\n\u001b[31m-\u001b[39m       num: '148'\n\u001b[31m-\u001b[39m     },\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonair',\n\u001b[31m-\u001b[39m       num: '148'\n\u001b[31m-\u001b[39m     },\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          [
            {
              "num": "148",
              "name": "Dragonair"
            },
            {
              "num": "149",
              "name": "Dragonite"
            }
          ],
          [
            {
              "num": "149",
              "name": "Dragonite"
            }
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/4.json, \"prev_evolution\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/4.json, \"prev_evolution\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Magikarp',\n\u001b[31m-\u001b[39m       num: '129'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Magikarp',\n\u001b[31m-\u001b[39m       num: '129'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          [
            {
              "num": "129",
              "name": "Magikarp"
            }
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/3.json, \"multipliers\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/3.json, \"multipliers\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   null,\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     2.19,\n\u001b[31m-\u001b[39m     2.24\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     1.04,\n\u001b[31m-\u001b[39m     1.96\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   null,\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     2.19,\n\u001b[31m-\u001b[39m     2.24\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     1.04,\n\u001b[31m-\u001b[39m     1.96\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          null,
          [
            2.19,
            2.24
          ],
          [
            1.04,
            1.96
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/2.json, \"name\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/2.json, \"name\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   'Oddish',\n\u001b[31m-\u001b[39m   'Gloom',\n\u001b[31m-\u001b[39m   'Vileplume',\n\u001b[31m-\u001b[39m   'Paras',\n\u001b[31m-\u001b[39m   'Parasect'\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   'Oddish',\n\u001b[31m-\u001b[39m   'Gloom',\n\u001b[31m-\u001b[39m   'Vileplume',\n\u001b[31m-\u001b[39m   'Paras',\n\u001b[31m-\u001b[39m   'Parasect'\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          "Oddish",
          "Gloom",
          "Vileplume",
          "Paras",
          "Parasect"
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/5.json, \"Dragon\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/5.json, \"Dragon\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 3,\n\u001b[31m-\u001b[39m   typeName: 'Dragon',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 3,\n\u001b[31m-\u001b[39m   typeName: 'Dragon',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 3,
          "typeName": "Dragon",
          "weaknessCount": 3
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/5.json, \"Fairy\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/5.json, \"Fairy\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fairy',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fairy',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 0,
          "typeName": "Fairy",
          "weaknessCount": 3
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/2.json, \"Grass\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/2.json, \"Grass\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 5,\n\u001b[31m-\u001b[39m   typeName: 'Grass',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 5,\n\u001b[31m-\u001b[39m   typeName: 'Grass',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 5,
          "typeName": "Grass",
          "weaknessCount": 0
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/2.json, \"Fire\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/2.json, \"Fire\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fire',\n\u001b[31m-\u001b[39m   weaknessCount: 5\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fire',\n\u001b[31m-\u001b[39m   weaknessCount: 5\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 0,
          "typeName": "Fire",
          "weaknessCount": 5
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/4.json, \"Normal\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/4.json, \"Normal\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 2,\n\u001b[31m-\u001b[39m   typeName: 'Normal',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 2,\n\u001b[31m-\u001b[39m   typeName: 'Normal',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 2,
          "typeName": "Normal",
          "weaknessCount": 0
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/4.json, \"Fighting\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/4.json, \"Fighting\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fighting',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fighting',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 0,
          "typeName": "Fighting",
          "weaknessCount": 3
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/1.json, \"Squirtle\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/1.json, \"Squirtle\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "num": "007",
            "name": "Squirtle"
          },
          {
            "num": "008",
            "name": "Wartortle"
          },
          {
            "num": "009",
            "name": "Blastoise"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/1.json, \"Wartortle\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/1.json, \"Wartortle\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "num": "007",
            "name": "Squirtle"
          },
          {
            "num": "008",
            "name": "Wartortle"
          },
          {
            "num": "009",
            "name": "Blastoise"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/1.json, \"Blastoise\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/1.json, \"Blastoise\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "num": "007",
            "name": "Squirtle"
          },
          {
            "num": "008",
            "name": "Wartortle"
          },
          {
            "num": "009",
            "name": "Blastoise"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/5.json, \"Mew\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/5.json, \"Mew\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Mew",
            "num": "151"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/3.json, \"DoesNotExist\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/3.json, \"DoesNotExist\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [],
        "operator": "deepStrictEqual"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "value: data/samples/5.json, \"null\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/5.json, \"null\"",
      "duration": 6,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Moltres',\n\u001b[31m-\u001b[39m     num: '146'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mewtwo',\n\u001b[31m-\u001b[39m     num: '150'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Moltres',\n\u001b[31m-\u001b[39m     num: '146'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mewtwo',\n\u001b[31m-\u001b[39m     num: '150'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Moltres",
            "num": "146"
          },
          {
            "name": "Dragonite",
            "num": "149"
          },
          {
            "name": "Mewtwo",
            "num": "150"
          },
          {
            "name": "Mew",
            "num": "151"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "value: data/samples/4.json, \"None\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/4.json, \"None\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mr. Mime',\n\u001b[31m-\u001b[39m     num: '122'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Scyther',\n\u001b[31m-\u001b[39m     num: '123'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Jynx',\n\u001b[31m-\u001b[39m     num: '124'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Electabuzz',\n\u001b[31m-\u001b[39m     num: '125'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Magmar',\n\u001b[31m-\u001b[39m     num: '126'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Pinsir',\n\u001b[31m-\u001b[39m     num: '127'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Tauros',\n\u001b[31m-\u001b[39m     num: '128'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Lapras',\n\u001b[31m-\u001b[39m     num: '131'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Ditto',\n\u001b[31m-\u001b[39m     num: '132'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mr. Mime',\n\u001b[31m-\u001b[39m     num: '122'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Scyther',\n\u001b[31m-\u001b[39m     num: '123'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Jynx',\n\u001b[31m-\u001b[39m     num: '124'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Electabuzz',\n\u001b[31m-\u001b[39m     num: '125'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Magmar',\n\u001b[31m-\u001b[39m     num: '126'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Pinsir',\n\u001b[31m-\u001b[39m     num: '127'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Tauros',\n\u001b[31m-\u001b[39m     num: '128'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Lapras',\n\u001b[31m-\u001b[39m     num: '131'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Ditto',\n\u001b[31m-\u001b[39m     num: '132'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Mr. Mime",
            "num": "122"
          },
          {
            "name": "Scyther",
            "num": "123"
          },
          {
            "name": "Jynx",
            "num": "124"
          },
          {
            "name": "Electabuzz",
            "num": "125"
          },
          {
            "name": "Magmar",
            "num": "126"
          },
          {
            "name": "Pinsir",
            "num": "127"
          },
          {
            "name": "Tauros",
            "num": "128"
          },
          {
            "name": "Lapras",
            "num": "131"
          },
          {
            "name": "Ditto",
            "num": "132"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "value: data/samples/2.json, \"Bug\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/2.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "value: data/samples/1.json, \"12\"",
      "fullTitle": "value(pokeData, value) -> returns the name and number of all pokemon with this value in any key:  value: data/samples/1.json, \"12\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Caterpie',\n\u001b[31m-\u001b[39m     num: '010'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Weedle',\n\u001b[31m-\u001b[39m     num: '013'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/value/spec.js:99:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Caterpie',\n\u001b[31m-\u001b[39m     num: '010'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Weedle',\n\u001b[31m-\u001b[39m     num: '013'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Caterpie",
            "num": "010"
          },
          {
            "name": "Butterfree",
            "num": "012"
          },
          {
            "name": "Weedle",
            "num": "013"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/5.json, \"Dragon\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/5.json, \"Dragon\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dratini',\n\u001b[31m-\u001b[39m     num: '147'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonair',\n\u001b[31m-\u001b[39m     num: '148'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dratini',\n\u001b[31m-\u001b[39m     num: '147'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonair',\n\u001b[31m-\u001b[39m     num: '148'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dragonite',\n\u001b[31m-\u001b[39m     num: '149'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Dratini",
            "num": "147"
          },
          {
            "name": "Dragonair",
            "num": "148"
          },
          {
            "name": "Dragonite",
            "num": "149"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/4.json, \"Normal\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/4.json, \"Normal\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/3.json, \"Fighting\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/3.json, \"Fighting\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dewgong',\n\u001b[31m-\u001b[39m     num: '087'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Dewgong',\n\u001b[31m-\u001b[39m     num: '087'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Dewgong",
            "num": "087"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/2.json, \"Bug\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/2.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Paras',\n\u001b[31m-\u001b[39m     num: '046'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Parasect',\n\u001b[31m-\u001b[39m     num: '047'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Paras',\n\u001b[31m-\u001b[39m     num: '046'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Parasect',\n\u001b[31m-\u001b[39m     num: '047'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Paras",
            "num": "046"
          },
          {
            "name": "Parasect",
            "num": "047"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "weakness: data/samples/1.json, \"Electric\"",
      "fullTitle": "weakness(pokeData, weakness) -> returns the name and number of all pokemon with this weakness:  weakness: data/samples/1.json, \"Electric\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/find-by/weakness/spec.js:81:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Butterfree',\n\u001b[31m-\u001b[39m     num: '012'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Squirtle",
            "num": "007"
          },
          {
            "name": "Wartortle",
            "num": "008"
          },
          {
            "name": "Blastoise",
            "num": "009"
          },
          {
            "name": "Butterfree",
            "num": "012"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/2.json, \"id\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/2.json, \"id\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   43,\n\u001b[31m-\u001b[39m   44,\n\u001b[31m-\u001b[39m   45,\n\u001b[31m-\u001b[39m   46,\n\u001b[31m-\u001b[39m   47\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   43,\n\u001b[31m-\u001b[39m   44,\n\u001b[31m-\u001b[39m   45,\n\u001b[31m-\u001b[39m   46,\n\u001b[31m-\u001b[39m   47\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          43,
          44,
          45,
          46,
          47
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/3.json, \"num\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/3.json, \"num\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   '083',\n\u001b[31m-\u001b[39m   '084',\n\u001b[31m-\u001b[39m   '085',\n\u001b[31m-\u001b[39m   '086',\n\u001b[31m-\u001b[39m   '087'\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   '083',\n\u001b[31m-\u001b[39m   '084',\n\u001b[31m-\u001b[39m   '085',\n\u001b[31m-\u001b[39m   '086',\n\u001b[31m-\u001b[39m   '087'\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          "083",
          "084",
          "085",
          "086",
          "087"
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/4.json, \"weaknesses\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/4.json, \"weaknesses\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m \u001b[34m...\u001b[39m Lines skipped\n\n\u001b[32m+\u001b[39m undefined\n\u001b[34m...\u001b[39m\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Ice',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Rock',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark',\n\u001b[31m-\u001b[39m     'Steel'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Ground'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Water',\n\u001b[31m-\u001b[39m     'Ground',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fighting'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass',\n\u001b[31m-\u001b[39m     'Fighting',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[34m...\u001b[39m\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m \u001b[34m...\u001b[39m Lines skipped\n\n\u001b[32m+\u001b[39m undefined\n\u001b[34m...\u001b[39m\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Ice',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Bug',\n\u001b[31m-\u001b[39m     'Rock',\n\u001b[31m-\u001b[39m     'Ghost',\n\u001b[31m-\u001b[39m     'Dark',\n\u001b[31m-\u001b[39m     'Steel'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Ground'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Water',\n\u001b[31m-\u001b[39m     'Ground',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fire',\n\u001b[31m-\u001b[39m     'Flying',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Fighting'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     'Electric',\n\u001b[31m-\u001b[39m     'Grass',\n\u001b[31m-\u001b[39m     'Fighting',\n\u001b[31m-\u001b[39m     'Rock'\n\u001b[34m...\u001b[39m",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          [
            "Bug",
            "Ghost",
            "Dark"
          ],
          [
            "Fire",
            "Electric",
            "Ice",
            "Flying",
            "Rock"
          ],
          [
            "Fire",
            "Bug",
            "Rock",
            "Ghost",
            "Dark",
            "Steel"
          ],
          [
            "Ground"
          ],
          [
            "Water",
            "Ground",
            "Rock"
          ],
          [
            "Fire",
            "Flying",
            "Rock"
          ],
          [
            "Fighting"
          ],
          [
            "Electric",
            "Grass"
          ],
          [
            "Electric",
            "Rock"
          ],
          [
            "Electric",
            "Grass",
            "Fighting",
            "Rock"
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/5.json, \"next_evolution\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/5.json, \"next_evolution\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonair',\n\u001b[31m-\u001b[39m       num: '148'\n\u001b[31m-\u001b[39m     },\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonair',\n\u001b[31m-\u001b[39m       num: '148'\n\u001b[31m-\u001b[39m     },\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Dragonite',\n\u001b[31m-\u001b[39m       num: '149'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          [
            {
              "num": "148",
              "name": "Dragonair"
            },
            {
              "num": "149",
              "name": "Dragonite"
            }
          ],
          [
            {
              "num": "149",
              "name": "Dragonite"
            }
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/4.json, \"prev_evolution\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/4.json, \"prev_evolution\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Magikarp',\n\u001b[31m-\u001b[39m       num: '129'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     {\n\u001b[31m-\u001b[39m       name: 'Magikarp',\n\u001b[31m-\u001b[39m       num: '129'\n\u001b[31m-\u001b[39m     }\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          [
            {
              "num": "129",
              "name": "Magikarp"
            }
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/3.json, \"multipliers\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/3.json, \"multipliers\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   null,\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     2.19,\n\u001b[31m-\u001b[39m     2.24\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     1.04,\n\u001b[31m-\u001b[39m     1.96\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   null,\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     2.19,\n\u001b[31m-\u001b[39m     2.24\n\u001b[31m-\u001b[39m   ],\n\u001b[31m-\u001b[39m   [\n\u001b[31m-\u001b[39m     1.04,\n\u001b[31m-\u001b[39m     1.96\n\u001b[31m-\u001b[39m   ]\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          null,
          [
            2.19,
            2.24
          ],
          [
            1.04,
            1.96
          ]
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "valuesForKey: data/samples/2.json, \"name\"",
      "fullTitle": "valuesForKey(pokeData, key) -> returns all the values stored in the given key:  valuesForKey: data/samples/2.json, \"name\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   'Oddish',\n\u001b[31m-\u001b[39m   'Gloom',\n\u001b[31m-\u001b[39m   'Vileplume',\n\u001b[31m-\u001b[39m   'Paras',\n\u001b[31m-\u001b[39m   'Parasect'\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/values-for-key/spec.js:79:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   'Oddish',\n\u001b[31m-\u001b[39m   'Gloom',\n\u001b[31m-\u001b[39m   'Vileplume',\n\u001b[31m-\u001b[39m   'Paras',\n\u001b[31m-\u001b[39m   'Parasect'\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          "Oddish",
          "Gloom",
          "Vileplume",
          "Paras",
          "Parasect"
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/5.json, \"Dragon\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/5.json, \"Dragon\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 3,\n\u001b[31m-\u001b[39m   typeName: 'Dragon',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 3,\n\u001b[31m-\u001b[39m   typeName: 'Dragon',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 3,
          "typeName": "Dragon",
          "weaknessCount": 3
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/5.json, \"Fairy\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/5.json, \"Fairy\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fairy',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fairy',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 0,
          "typeName": "Fairy",
          "weaknessCount": 3
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/2.json, \"Grass\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/2.json, \"Grass\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 5,\n\u001b[31m-\u001b[39m   typeName: 'Grass',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 5,\n\u001b[31m-\u001b[39m   typeName: 'Grass',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 5,
          "typeName": "Grass",
          "weaknessCount": 0
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/2.json, \"Fire\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/2.json, \"Fire\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fire',\n\u001b[31m-\u001b[39m   weaknessCount: 5\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fire',\n\u001b[31m-\u001b[39m   weaknessCount: 5\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 0,
          "typeName": "Fire",
          "weaknessCount": 5
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/4.json, \"Normal\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/4.json, \"Normal\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 2,\n\u001b[31m-\u001b[39m   typeName: 'Normal',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 2,\n\u001b[31m-\u001b[39m   typeName: 'Normal',\n\u001b[31m-\u001b[39m   weaknessCount: 0\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 2,
          "typeName": "Normal",
          "weaknessCount": 0
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "typeStats: data/samples/4.json, \"Fighting\"",
      "fullTitle": "typeStats(pokeData, type) -> returns how many times a type appears as a type and as a weakness:  typeStats: data/samples/4.json, \"Fighting\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fighting',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }\n    at Context.<anonymous> (functions/type-stats/spec.js:66:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m {\n\u001b[31m-\u001b[39m   typeCount: 0,\n\u001b[31m-\u001b[39m   typeName: 'Fighting',\n\u001b[31m-\u001b[39m   weaknessCount: 3\n\u001b[31m-\u001b[39m }",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": {
          "typeCount": 0,
          "typeName": "Fighting",
          "weaknessCount": 3
        },
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/1.json, \"Squirtle\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/1.json, \"Squirtle\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "num": "007",
            "name": "Squirtle"
          },
          {
            "num": "008",
            "name": "Wartortle"
          },
          {
            "num": "009",
            "name": "Blastoise"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/1.json, \"Wartortle\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/1.json, \"Wartortle\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "num": "007",
            "name": "Squirtle"
          },
          {
            "num": "008",
            "name": "Wartortle"
          },
          {
            "num": "009",
            "name": "Blastoise"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/1.json, \"Blastoise\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/1.json, \"Blastoise\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Squirtle',\n\u001b[31m-\u001b[39m     num: '007'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Wartortle',\n\u001b[31m-\u001b[39m     num: '008'\n\u001b[31m-\u001b[39m   },\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Blastoise',\n\u001b[31m-\u001b[39m     num: '009'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "num": "007",
            "name": "Squirtle"
          },
          {
            "num": "008",
            "name": "Wartortle"
          },
          {
            "num": "009",
            "name": "Blastoise"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/5.json, \"Mew\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/5.json, \"Mew\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m [\n\u001b[31m-\u001b[39m   {\n\u001b[31m-\u001b[39m     name: 'Mew',\n\u001b[31m-\u001b[39m     num: '151'\n\u001b[31m-\u001b[39m   }\n\u001b[31m-\u001b[39m ]",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [
          {
            "name": "Mew",
            "num": "151"
          }
        ],
        "operator": "deepStrictEqual"
      }
    },
    {
      "title": "evolutionsOf: data/samples/3.json, \"DoesNotExist\"",
      "fullTitle": "evolutionOf(pokeData, name) -> returns all evolutions of a pokemon, given it's name:  evolutionsOf: data/samples/3.json, \"DoesNotExist\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []\n    at Context.<anonymous> (functions/evolutions-of/spec.js:51:14)\n    at processImmediate (internal/timers.js:444:21)",
        "message": "Expected values to be strictly deep-equal:\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m undefined\n\u001b[31m-\u001b[39m []",
        "generatedMessage": true,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "expected": [],
        "operator": "deepStrictEqual"
      }
    }
  ],
  "passes": [
    {
      "title": "keyValue: data/samples/1.json, \"name\", \"Weedle\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/1.json, \"name\", \"Weedle\"",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/1.json, \"id\", \"12\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/1.json, \"id\", \"12\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/2.json, \"doesNotExist\", \"hi!\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/2.json, \"doesNotExist\", \"hi!\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/2.json, \"name\", \"Mew\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/2.json, \"name\", \"Mew\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/3.json, \"egg\", \"Not in Eggs\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/3.json, \"egg\", \"Not in Eggs\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/3.json, \"egg\", \"5 km",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/3.json, \"egg\", \"5 km",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "keyValue: data/samples/4.json, \"spawn_time\", \"N/A\"",
      "fullTitle": "keyValue(pokeData, key, value) -> returns the number and name of all pokemon with the given key/value pair:  keyValue: data/samples/4.json, \"spawn_time\", \"N/A\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/1.json, 13",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/1.json, 13",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/1.json, 16",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/1.json, 16",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/2.json, 46",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/2.json, 46",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/2.json, 42",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/2.json, 42",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/3.json, 84",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/3.json, 84",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id: data/samples/3.json, 85",
      "fullTitle": "id(pokeData, id) -> returns the pokemon object with the given id, or an empty object:  id: data/samples/3.json, 85",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/5.json, \"Dragon\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/5.json, \"Dragon\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/4.json, \"Normal\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/4.json, \"Normal\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/3.json, \"Water\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/3.json, \"Water\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/2.json, \"Bug\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/2.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: data/samples/1.json, \"Bug\"",
      "fullTitle": "type(pokeData, type) -> returns the name and number of all pokemon with this type:  type: data/samples/1.json, \"Bug\"",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}